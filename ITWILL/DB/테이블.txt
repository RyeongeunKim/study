<< 제약조건 >>

1.Not null - 컬럼에 null값이 들어오는 것을 막아줌
2.Unique - 중복된 값이 들어오는 것을 막아줌
3.Primary key(기본키) - not null + unique
		    - 테이블 당 한번 선언 가능함!
4.Foreign key(외래키) - 특정 테이블의 특정 컬럼을 참조함
		    - 참조하는 컬럼의 값만 사용 가능함
5.Check - 해당 컬럼이 만족해야하는 조건문을 지정함
  예) 메일주소에 반드시 @가 포함되어 있어야한다.

<< 테이블 >>

* 모든 테이블 조회

select table_name
from user_tables;

* 자주 사용

desc 테이블명
예) desc employees / desc departments / desc dept

< 기본 형식 > ※select과 from은 필수고 where은 옵션이다

select //조회(* : 모든 컬럼)
from //테이블명
where //조건

< 컬럼 사이즈 조절해서 출력하기 > 

col department_name format a20 

해석 => department테이블의 name을 20byte로 조절

※ 참고
-하나는 1byte
-숫자, 날짜가 있는 컬럼은 사이즈 조절하면 안됨
 문자만 사이즈 조절 가능
-쿼리가 아니며 환경설정 명령어임
-1 //버퍼에 남아있는 마지막 쿼리구문 확인 
?? /enter 하면 적용된다
컬럼 엘리아스? = 별칭 as 사용

< where > 

  좌변  = 우변
(컬럼명)  (값)

연산자는 =, >, <, <=, >= 다 사용가능

※ 규칙
명령어, 테이블명, 컬럼명 + 숫자: 그냥 쓰면됨, 대소문자 구분X

DB에 저장된 실제 데이터값은 대소문자 구분 O
  --> 처음에 저장한 그대로 입력해야 검색된다
  (해결해주는 함수가 있다..뒤에 가서 배움)

문자, 날짜 : 작은 따옴표 안에 써야됨 

날짜형식 : 'DD-MON-RR' --> '일-월-연도' 
	오라클에 있는 기본 형식, 바꿀 수 있음

< 정렬 order by > 맨 끝에 적으면됨(from 뒤나, where 뒤)

오름차순 asc
내림차순 desc

※ no rows : 조건에 만족하는 행이 없다

< join >

join 
on 조건 적기 > 컬럼명을 접두어로 붙이고 세미콜론
(join과 on은 한 세트)

여러 테이블로 부터 데이터 검색
공통된 데이터가 들어있는 컬럼을 선택하여 테이블을 연결시켜주어야함
(컬럼명 상관 X 안에 있는 데이터가 공통되어야함)

< 서브쿼리 > 쿼리구문 안에 쿼리구문이 들어가있음

안: 서브쿼리(inner query) / 밖: 메인쿼리(outer query)
안 -> 으로 나오면서 실행

< insert / update / delete >

insert into 테이블명 (컬럼명은 나열해도 되고 안해도됨)
values 삽입할 값 (기본 순서대로 적어야됨)

update 테이블명
set 바꿀 내용 
where 특정 사원만 바꿀 경우 범위 지정 (where을 안적으면 전체가 다 바뀜)

※ 저장명령어 // commit

db에 변경한 내용을 저장함 / 안하면 임시데이터임(예: 한컴 미리보기)
  
rollback // 취소명령어 (commit 후 rollback은 안됨)

delete from 테이블명
where

delete // 특정 행 삭제

< 데이터 제어어(DCL) > 권한을 부여하거나 회수

1. user 생성
-sys 사용자로 접속 
-create user 유저명
-identified by 비밀번호;
-처음 생성된 사용자는 아무 권한도 X --> 권한을 부여해야 접속가능

2. System 권한

1) 권한부여 ※ 접속하려다 실패하면 현재 접속된 유저는 없음

grant 부여할 권한 
to 누구

2) 권한회수

revoke 회수할 권한 
from 누구

3) Object 권한

* 권한부여

다른 user 소유의 object를 찾을 땐 앞에 소유자명을 적어야함

다른 소유의 오브젝트를 사용하려면 권한이 있어야한다

hr사용자로 접속해서

시스템 권한과 다르게 오브젝트는 중간에 on절이 있어야한다

grant 부여할 권한
on 테이블명
to 누구에게

* 부여받으면

demo로 접속해서

select employee_id, last_name, salary, department_id
from hr.employees
where employee_id < 110;

* 권한회수

revoke 어떤권한
on 어느테이블
from 누구 



 
