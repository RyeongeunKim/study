1. javav Reosurces -> src 에 패키지만들기 -> 패키지명은  디비테이블명과 동일하게 짓는다
2. 패키지 안에 DTO 클래스 파일 만들기 
   * DTO : jsp프로그램안에서 일시적으로 하나의 데이터 단위를 담기위한 용도로 정의되는 객체
3. 디비에서 정의했던 대로 DTO에 넣어준다
   ex) userID와 userPassword 컬럼이 있을 경우
        String userID;
        String userPassword;
4. 마우스 우클릭 -> source - generate getters and setters
    * getter : 현재 기록된 데이터를 가져옴
    * setter : 데이터를 기록함
5. 패키지 안에 DAO 클래스 파일 만들기 
  * DAO : 데이터 접근 객체, 실질적으로 DB와 연동되서 기록하고 가져옴
6. javav Reosurces 우클릭 -> 패키지만들기(util)
7. util 패키지 안에 DatabaseUtil 클래스파일 만들기 
  * DatabaseUtil : 실질적으로 디비를 연동하는 부분 처리

8. DatabaseUtil
public static Connection getConnection(){
		
	}

* static : getConnection() 함수를 다른 라이브러리에서 쉽게 사용하기 위해서

노란 전구를 누르고 java.sql 패키지 밑에있는 Connection 클래스 가져오기

> getConnection() 안에 try-catch

[ try 구문 ]

try dbURL, dbID, dbPassword 이런 계정 정보로 
로그인해서 (jdbc 연동)
그 접속한 상태 정보를 반환(return)

[ catch 구문 ]

printStackTrace => 에러 메세지의 발생 근원지를 찾아서 단계별로 에러를 출력한다.

[ catch 구문 밖 ] 오류 발생 시 null값 반환

9. userDAO

	public void join(String userID, String userPassword){
		String SQL = "insert into user values (?, ?)";
	}

? 안에는 사용자가 입력한 ID, PW 값이 들어간다


> String SQL = "insert into user values (?, ?)"; 밑에 try-catch

[ try ] 

> DatabaseUtil패키지의 getConnection() 함수 Connection
> PreparedStatement pstmt = conn.prepareStatement(SQL);
   sql문을 문자열로 만들고 PreparedStatement 클래스 객체를 만든다
   그 객체는 connection 객체에 있는 prepareStatement() 메소드로 받게 된다.
> pstmt.setString(1, userID); => 첫 번째 ? 에 id 변수를 세팅
> pstmt.setString(2, usetPassword); => 첫 번째 ? 에 pw 변수를 세팅
> return pstmt.executeUpdate(); => insert 구문을 실행해서 나온 결과 반환
   -> 반환값은 insert가 된 데이터의 갯수
        ex) 한개의 데이터가 들어간 경우 1 반환, 안들어 갔을 땐 0 반환
   -> 반환값이 int 타입이므로 public int join(...) 으로 고치기

[ catch ] 8번과 같이 예외처리

[ catch 구문 밖 ] 오류 발생 시 -1 반환

10. 회원가입폼.jsp 를 만든다

11. Action.jsp 

1. import => DTO, DAO, PrintWriter

* PrintWriter : 스크립트 구문을 쉽게 클라이언트에게 출력함

2. 사용자가 보낸 데이터 처리

> 인코딩처리
> id 초기화
> pw 초기화
> if 구문으로 id, pw 가 존재하는지 확인
> UserDAO userDAO = new UserDAO();
   userDAO 를 이용해서 실제로 DB와 연동
>int result = userDAO.join(userID, userPassword); 
  회원가입을 실행한 결과를 result변수에 담음






