< 테이블 구조 검색 >

desc employees, desc departments

* == ALL 모든 컬럼 출력
-------------------------------------------------------
< 컬럼 사이즈 조절 >

SQL구문 X SQL+ 에서 사용하는 환경설정 명령어 (; 사용 X)
department_name 사이즈를 조절하고 싶을 경우
col department_name format a20
(컬럼)    (컬럼명)	     (사이즈조절)

※ 점선 하나가 1byte
주의점 : 문자만 사이즈 조절 가능(숫자는 안됨)
-------------------------------------------------------
버퍼에 남아있는 마지막 쿼리 확인 l
-------------------------------------------------------
셀렉트에는 산술식 넣기 가능 -> 괄호 우선순위 규칙은 SQL에서도 적용됨
-------------------------------------------------------
< 널값 >

수당을 받는 직원도 있고 안받는 직원도 있음(.4 일경우 자기 연봉의 4%)
수당비율이 없는 직원은 널값임

널은 0과 공백과 다르다. 0 과는 구분이 쉽지만
공백은 char(문자) 타입으로 널과 눈으로는 구분이 안된다. 
그러나 공백은 char 데이터 타입에만 사용할 수 있고
널은 모든 데이터 타입에 사용 가능하다!

※ commission_pct 컬럼 널값 구분하는 법
desc employees 조회해서 
type이 commission_pct 컬럼의 number 이므로 널이다.

만약 name컬럼(char타입)에 공백이 있을 경우는
널인지, 공백인지 구분할 수 없으며 함수를 이용하여 구분한다.

산술식에 null이 포함될 경우 결과는 무조건 널이다!
100+null=null
100-null=null
100*null=null
100/null=null

커미션을 받는 사원은 수당이 계산되서 나오고
받지 않는 사원의 결과는 null로 나온다.
------------------------------------------------------
< 리터럴 문자 >

쿼리구문에 포함된 일반 문자, 숫자, 날짜 값
문자나 날짜 리터럴은 작은 따옴표 묶어서 작성하기

< DISTINCT >

중복된 값은 제외하고 출력해달라
-------------------------------------------------------
< 1장 연습문제 풀이 >

1. select employee_id as "Emp #", last_name as "employee',
          job_id as "Job",  hire_date as 'Hire Date"
   from employees
2. select last_name || ', ' || job_id 
          as "Employee and Title"
   from employees;
---------------------------------------------------------
< WHERE 조건문 형식 >

S
F
W 좌변(컬럼명) = 우변(리터럴값);

날짜 형식: DD-MON-RR

< 비교연산자 >

▶ BETWEEN 
 
BETWEEN A AND B = A이상 AND B이하 
      날짜 일 경우 = 과거 날짜 AND 최근 날짜
      문자 일 경우 = 'Abel' and 'King' --> 알파벳 순서로 검색하기

※ 조건문 여러 개 작성할 때 and, or로 연결

▶ IN(다중행 비교연산자) 

where manager_id=100
or manager_id=101
or manager_id=201;

이렇게도 가능하지만 manager_id 구문이 반복됨
줄일 방법은?

※ 단일행 비교연산자 < <= > >= < > = 우변에 조건이 하나만 가능

※ 다중행 비교연산자 우변에 조건이 여러 개 올 수 있음
  여러 개 있지만 예제에서는 IN 사용
  < IN(=, or 성격을 내포함) >
  예) a IN (100, 101, 201) => a가 100과 같거나 101과 같거나 201과
  			     같은 것을 전부 출력하라 

▶ LIKE

% : 0 또는 여러개
_ : 반드시 1개 

a로 시작되는 문자열 : 'a%'
a가 포함된 문자열 : '%a%'
a로 끝나는 문자열 : '%a'
두번째 문자가 a인 문자열 : '_a%'
끝에서 세번째 문자가 a인 문자열 : '%a__'

▶ IS NULL

null은 특수한 값이기 때문에 특수한 비교연산자가 존재한다
 => is null (비교연산자 + 우변)

-----------------------------------------------------------
(예제1) employees 테이블로 부터 사용의 employee_id, last_name, salary, commission_pct를 출력하되 커미션을 받지 않는 사원만 출력하시오.





