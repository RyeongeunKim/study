/*
	자바에서 다형성 개념의 문법들
	
	1.  메소드 오버로딩
	2.  생성자 오버로딩 
	3.  업캐스팅
	4.  메소드 오버라이딩


업캐스팅이란?
-  부모클래스 타입의 참조 변수 하나에  여러 자식객체들의 주소를 저장하여 사용할수 있는 형태를 의미.
-  부모클래스 타입의 참조 변수에 자식객체의 주소를 저장 하기 위해 부모클래스 타입으로 형변환시키는 것을
   업캐스팅 했다라고 말한다.
*/

class Parent{
	public void parentPrn() {
		System.out.println("부모클래스 : parentPrn메소드");
	}
}
class Child extends Parent{
	public void childPrn() {
		System.out.println("자식클래스 : childPrn메소드");
	}
	
}
public class Test94 {

	public static void main(String[] args) {
		// 일반 기본 자료형의 형변환
		int a = 10;  // 4바이트 크기 a변수 메모리에 저장 한 정수 10 (작은 데이터)
		long b = 20; // 8바이트 크기 b변수 메모리에 저장 한 정수 20 (큰 데이터)
		//8바이트 크기 b변수 메모리에
		//4바이트 크기 a변수 메모리에 저장된 정수 10(작은데이터)를 저장하려고 할때
		//개발자가 직접 강제로 int데이터10을  long데이터10L로 데이터의 형태를 변환할수 있다.
		b  = (long)a;//요약 : 강제 형 변환
		b  = a; //자동으로 int데이터10을 long데이터10L로 데이터의 형태가 자동으로 변환되어 저장됨
				//요약 : 자동 형변환 이 일어남
		
		//참조자료형의 형 변환(객체의 주소를 참조 하는 참조변수의 형 변환)
		//자식객체 생성
		Child child  = new Child();
		//Child자식클래스타입의 참조변수child로  생성한 new Child()객체 메모리에 접근 하여
		//호출 할수 있는 메소드는? 2개 
		child.parentPrn();//부모Parent객체의 parentPrn메소드 호출 가능
		child.childPrn();//자식Chaild객체의 childPrn메소드 호출 가능
		
//업캐스팅이란?
//-  부모클래스 타입의 참조 변수 하나에  여러 자식객체들의 주소를 저장하여 사용할수 있는 형태를 의미.
		//1.부모클래스 타입의 참조변수 선언
		Parent p;
		
		//2.부모클래스 타입의 참조변수에 자식객체의 주소를 저장시 부모클래스 타입으로 형변환 해서 
		//  자식 객체의 주소 저장
	  //p = (Parent)child; //업캐스팅이 일어남(강제형변환에 의해서)
		p = child;//업캐스팅이 일어남(자동형변환에 의해서)
		
		//위 2.에서 업캐스팅 후에  Parent p참조변수로 호출 할수 있는 메소드는?
		//         부모클래스 내부에 있는 parentPrn()메소드만 호출 가능 하므로
		//         업캐스팅을 함으로써 부모클래스 타입의 참조 변수 하나에 
		//         여러 자식객체의 주소를 저장해서 사용 할수 있기 때문에....
		//         참조변수를 낭비 하여 여러개를 만들어 놓지 않아도 되는 장점은 있지만...
		//         부모 클래스에 존재 하지 않는 자식클래스 내부의 메소드는 호출이 불가능 하다는 
		//         단점도 있다.
		
		
		
		
	
	}

}





