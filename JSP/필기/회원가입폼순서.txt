* 자바빈? 자바파일로 클래스파일(객체)를 설계해놓고, 
           jsp에서 필요에 따라 클래스를 끌어다 쓰는데 
           이때 클래스(객체)를 빈이라고 부른다.

<jsp: ~~> 라는 jsp 액션태그 사용

* JDBC? 자바 프로그램 안에서 SQL을 실행하기 위해 DB를 연결해주는 응용프로그램 인터페이스
  //0 단계 - 해당 라이브러리 설치 (WEB-INF/lib/파일 추가) 1회
  //1 단계 - 라이브러리에서 필요한 드라이버를 로드
  //2 단계 - 드라이버로드 정보를 활용해서 디비연결
  //conn이 있어야 연결할 수 있다.

  ※ PreparedStatement 객체 : statement를 상속받는 인터페이스로 SQL구문을 실행시키는 기능을 갖는 객체

---------------------------------------------------------------------------------------------------------

* 순서 *

1. 회원가입폼 만들기

   이름, 아이디, 비밀번호, 이메일 등 입력

2. 회원가입폼에서 정보를 전달받아 저장하는 Pro 만들기

   1) 한글처리
   2) com.itwillbs.member 패키지에 자바빈 객체 생성
       -멤버변수 만들기
       -get, set 메소드 만들기
   3) Pro에 돌아가서 전달되는 데이터 (파라미터값 저장-자바빈(액션태그))
      전달되는 파라미터값 저장
   4) JDBC ==> 해당 정보를 사용해서 DB로 이동 저장
      // 디비연결 필요정보 
      1 드라이버로드
      2 디비연결
      3 sql구문 작성 & pstmt 객체 생성
      4 ?
      5 sql 실행 
   5) 로그인페이지로 이동 (loginForm.jsp) 
      자바스크립트 사용 이동

3. 로그인폼 => 아이디, 비밀번호 
                  / 로그인(submit)버튼 
                  / 회원가입(onclick => 회원가입폼과 연결) 버튼

4. 로그인폼에서 정보를 전달받아 저장하는 Pro 만들기

   1) 한글처리
   2) 전달정보를 저장(자바빈객체 - 액션태그) id,pw
   3) JDBC ==> 해당 정보를 사용해서 DB로 이동 저장
     // DB 이동후 로그인 상태 판별 
     // 디비연결 필요정보 
      1 드라이버로드
      2 디비연결
      3 sql구문 작성 & pstmt 객체 생성
      4 ?
      5 데이터 처리
         1) 회원이다 
            비밀번호를 사용해서 본인확인
            (1) 비밀번호 같다(+ 회원이다) => 본인 => 로그인 성공
              // 로그인 성공의 의미로 회원 ID정보를 session 내장객체에 저장
              // main.jsp 페이지 이동
            (2) 비밀번호 다름.(+ 회원이다) => 비밀번호 오류창
         2) 비회원이다
	// confirm(" 비회원 입니다. 회원가입 하겠습니까?")
	// Y - 회원가입 페이지 이동(insertForm.jsp), N - 페이지 뒤로가기(history.back();)

5. 로그아웃 페이지 만들기 => 세션 초기화

----------------------------------------------------------------------------------------------------------

1. insertForm.jsp : 회원가입폼 만들기

폼태그

입력한 자료 submit ->  insertPro에 전달

2. insertPro.jsp : 회원가입정보를 전달받아서 저장 -> DB저장 (회원)

1) 한글처리

2) com.itwillbs.member 패키지에 - MemberBean 자바빈 객체만들기
   전달되는 데이터 (파라미터값 저장-자바빈(액션태그))

(1) 아이디, 비밀번호, 이름 등을 담을 멤버변수
    멤버변수에 직접 접근할 수 없게 private를 사용

    예) private String id;

    ※ Timestamp regdate 회원가입일 저장

(2) 데이터를 가져오고 세팅하는 기능의 메소드 만들기
- get메서드 : 데이터를 가져오는 경우
- set메서드 : 데이터를 세팅하는 경우

(3) 오버라이드? 데이터를 잘 받아왔는지 왔는지 확인하기 위해서 toString() 메소드 만들기
                   (꼭 안해도 되지만 확인용)

// alt shift s + s

3) 액션태그 : 자바빈 객체 생성 -> 전달되는 파라미터값 저장

(1) <jsp:useBean>  자바빈 객체를 생성하는 액션태그
    <jsp:useBean id="빈이름" class="자바빈 클래스 이름" scope="범위" />

(2) <jsp:setProperty> 전달되는 파라미터값 저장
    <jsp:setProperty name="자바빈" property="이름" value="값" />
     name : 프로퍼티 값을 변경할 자바빈 객체의 이름. <jsp:useBean> 액션 태그의 id 속성에서 지정한 값을 사용
     property : 값을 지정할 프로퍼티의 이름
     value : 프로퍼티 값. 표현식 사용가능

4) JDBC ==> 해당 정보를 사용해서 DB로 이동 저장

(1) 디비연결 필요정보 : DRIVER / DBURL / DBID / DBPW

 1 드라이버로드 / Class.forName()
 2 디비연결 / DriverManager.getConnection()
 3 sql구문 작성 & pstmt 객체 생성 
   - Connection 인스턴스를 이용해서 Statement 객체 생성
   - Statement 객체의 결과를 ResultSet 이나 int에 받기
 4 ? 에 값을 가져와서 세팅하기
 5 sql 실행

5) 로그인페이지로 이동 (loginForm.jsp)
    자바스크립트 사용 이동

3. loginForm.jsp : 로그인폼
